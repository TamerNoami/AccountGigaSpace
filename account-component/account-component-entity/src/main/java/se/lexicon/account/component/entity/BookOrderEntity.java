package se.lexicon.account.component.entity;

import com.gigaspaces.annotation.pojo.SpaceClass;
import com.gigaspaces.annotation.pojo.SpaceId;
import com.gigaspaces.annotation.pojo.SpaceRouting;
import com.so4it.annotation.Allowed;
import com.so4it.common.util.object.Required;
import com.so4it.component.entity.AbstractEntityBuilder;
import com.so4it.component.entity.IdEntity;

/**
 *
 * @author Magnus Poromaa {@literal <mailto:magnus.poromaa@so4it.com/>}
 */
@SpaceClass
public class BookOrderEntity extends IdEntity<String> {

    //The unique id
    @Allowed(value = "Auto generated by GS", types = {Allowed.Type.NULLABLE})
    private String id;

    //The arrangement id of this account balance
    private String accountId;

    // Unique id for the posting
    private Double cost;

    private String name;

    private BookOrderEntity() {
    }

    private BookOrderEntity(Builder builder) {
        this.id = builder.id;
        this.accountId = Required.notNull(builder.accountId,"accountId",builder.isTemplate());
        this.cost = Required.notNull(builder.cost,"cost",builder.isTemplate());
        this.name = Required.notNull(builder.name,"name",builder.isTemplate());

    }

    @Override
    @SpaceId(autoGenerate = true)
    public String getId() {
        return id;
    }

    private void setId(String id) {
        this.id = id;
    }

    @SpaceRouting
    public String getAccountId() {
        return accountId;
    }

    private void setSsn(String accountId) {
        this.accountId = accountId;
    }

    public Double getCost() {
        return cost;
    }

    public String getName(){ return name;}

    private void setCost(Double cost) {
        this.cost = cost;
    }







    public static Builder builder() {
        return new Builder(false);
    }

    public static Builder templateBuilder() {
        return new Builder(true);
    }


    public static class Builder extends AbstractEntityBuilder<BookOrderEntity> {

        private String id;

        //The arrangement id of this account balance
        private String accountId;

        // Unique id for the posting
        private Double cost;

        private String name;

        public Builder(boolean template) {
            super(template);
        }

        public BookOrderEntity.Builder withId(String id) {
            this.id = id;
            return this;
        }

        public BookOrderEntity.Builder withAccountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        public BookOrderEntity.Builder withCost(Double cost) {
            this.cost = cost;
            return this;
        }

        public BookOrderEntity.Builder withName(String name) {
            this.name = name;
            return this;
        }


        @Override
        public BookOrderEntity build() {
            return new BookOrderEntity(this);
        }
    }
}
